{"ast":null,"code":"var _jsxFileName = \"/home/linux/Downloads/Compressed/bucketlist-main/src/components/Upload/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { property as storage } from \"../../db/db\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UploadImage = () => {\n  _s();\n\n  const [fileList, setFileList] = useState([{\n    uid: '-1',\n    name: 'image.png',\n    status: 'done',\n    url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png'\n  }]);\n\n  const onChange = ({\n    fileList: newFileList\n  }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const uploadImage = async options => {\n    const {\n      onSuccess,\n      onError,\n      file\n    } = options;\n    const random = Math.random().toString(36).slice(2);\n\n    try {\n      await storage.ref(`property/${file.name}_${random}`).put(file);\n      await storage.ref(`property/${file.name}_${random}`).getDownloadURL().then(src => {\n        console.log(src);\n      });\n      onSuccess(\"Ok\");\n    } catch (err) {\n      console.log(\"Eroor: \", err); // const error = new Error(\"Some error\");\n\n      onError({\n        err\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ImgCrop, {\n    rotate: true,\n    children: /*#__PURE__*/_jsxDEV(Upload, {\n      customRequest: uploadImage,\n      listType: \"picture-card\",\n      fileList: fileList,\n      onChange: onChange,\n      onPreview: onPreview,\n      children: fileList.length < 5 && '+ Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadImage, \"n313QHBlx8fCQlfgnDHrD4cyKeo=\");\n\n_c = UploadImage;\nexport default UploadImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"sources":["/home/linux/Downloads/Compressed/bucketlist-main/src/components/Upload/Upload.js"],"names":["React","useState","Upload","ImgCrop","property","storage","UploadImage","fileList","setFileList","uid","name","status","url","onChange","newFileList","onPreview","file","src","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","uploadImage","options","onSuccess","onError","random","Math","toString","slice","ref","put","getDownloadURL","then","console","log","err","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\nimport { property as storage } from \"../../db/db\";\n\nconst UploadImage = () => {\n  const [fileList, setFileList] = useState([\n    {\n      uid: '-1',\n      name: 'image.png',\n      status: 'done',\n      url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\n    },\n  ]);\n\n  const onChange = ({ fileList: newFileList }) => {\n    setFileList(newFileList);\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const uploadImage = async options => {\n    const { onSuccess, onError, file } = options;\n    const random = Math.random().toString(36).slice(2)\n    try {\n        await storage.ref(`property/${file.name}_${random}`).put(file)\n        await storage.ref(`property/${file.name}_${random}`).getDownloadURL().then((src) => {\n           console.log(src);\n        });\n\n        \n        onSuccess(\"Ok\");\n    } catch (err) {\n        console.log(\"Eroor: \", err);\n       // const error = new Error(\"Some error\");\n        onError({ err });\n    }\n};\n\n  return (\n    <ImgCrop rotate>\n      <Upload\n         customRequest={uploadImage}\n        listType=\"picture-card\"\n        fileList={fileList}\n        onChange={onChange}\n        onPreview={onPreview}\n      >\n        {fileList.length < 5 && '+ Upload'}\n      </Upload>\n    </ImgCrop>\n  );\n};\n\n\nexport default  UploadImage;"]},"metadata":{},"sourceType":"module"}